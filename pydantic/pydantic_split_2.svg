<svg viewBox="0 0 1600 1000" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <!-- GitHub-friendly gradients -->
    <linearGradient id="headerGrad2" x1="0%" y1="0%" x2="100%" y2="0%">
      <stop offset="0%" style="stop-color:#7c3aed;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#6366f1;stop-opacity:1" />
    </linearGradient>
    
    <linearGradient id="fieldGrad" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#ea580c;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#dc2626;stop-opacity:1" />
    </linearGradient>
    
    <linearGradient id="constraintsGrad" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#0891b2;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#0e7490;stop-opacity:1" />
    </linearGradient>
    
    <linearGradient id="annotatedGrad" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#059669;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#047857;stop-opacity:1" />
    </linearGradient>
    
    <!-- Shadow filter -->
    <filter id="shadow" x="-20%" y="-20%" width="140%" height="140%">
      <feDropShadow dx="2" dy="4" stdDeviation="3" flood-color="#00000030"/>
    </filter>
  </defs>

  <!-- White background for GitHub -->
  <rect x="0" y="0" width="1600" height="1000" fill="white"/>

  <!-- Header Section -->
  <rect x="20" y="20" width="1560" height="100" rx="15" fill="url(#headerGrad2)" filter="url(#shadow)"/>
  <text x="800" y="60" font-family="Arial, sans-serif" font-size="42" font-weight="bold" text-anchor="middle" fill="white">
    üêç PYDANTIC GUIDE - PART 2
  </text>
  <text x="800" y="95" font-family="Arial, sans-serif" font-size="22" text-anchor="middle" fill="white" opacity="0.9">
    Field Validation &amp; Advanced Constraints
  </text>

  <!-- Field Function Section -->
  <g transform="translate(40, 150)">
    <rect x="0" y="0" width="720" height="360" rx="15" fill="#fef2f2" stroke="#ef4444" stroke-width="2" filter="url(#shadow)"/>
    <rect x="20" y="20" width="680" height="60" rx="30" fill="url(#fieldGrad)"/>
    <text x="360" y="60" font-family="Arial, sans-serif" font-size="28" font-weight="bold" text-anchor="middle" fill="white">
      üè∑Ô∏è Field() Function Features
    </text>
    
    <text x="40" y="120" font-family="Arial, sans-serif" font-size="20" font-weight="bold" fill="#7f1d1d">
      üìù Metadata &amp; Documentation:
    </text>
    <text x="40" y="150" font-family="Arial, sans-serif" font-size="16" fill="#991b1b">
      ‚Ä¢ Add descriptions, examples, titles to fields
    </text>
    <text x="40" y="175" font-family="Arial, sans-serif" font-size="16" fill="#991b1b">
      ‚Ä¢ Generate automatic JSON schema documentation
    </text>
    
    <!-- Code example -->
    <rect x="40" y="195" width="640" height="145" rx="8" fill="#1e293b" stroke="#334155" stroke-width="1"/>
    <text x="55" y="220" font-family="Monaco, monospace" font-size="15" fill="#fbbf24" font-weight="bold">
      from pydantic import BaseModel, Field
    </text>
    <text x="55" y="250" font-family="Monaco, monospace" font-size="15" fill="#fb7185" font-weight="bold">
      class Product(BaseModel):
    </text>
    <text x="75" y="275" font-family="Monaco, monospace" font-size="15" fill="#f3f4f6">
      name: str = Field(..., description="Product name",
    </text>
    <text x="120" y="300" font-family="Monaco, monospace" font-size="15" fill="#f3f4f6">
      min_length=1, max_length=100)
    </text>
    <text x="75" y="325" font-family="Monaco, monospace" font-size="15" fill="#f3f4f6">
      price: float = Field(gt=0, example=99.99)
    </text>
  </g>

  <!-- Numeric Constraints Section -->
  <g transform="translate(800, 150)">
    <rect x="0" y="0" width="720" height="360" rx="15" fill="#f0f9ff" stroke="#0ea5e9" stroke-width="2" filter="url(#shadow)"/>
    <rect x="20" y="20" width="680" height="60" rx="30" fill="url(#constraintsGrad)"/>
    <text x="360" y="60" font-family="Arial, sans-serif" font-size="28" font-weight="bold" text-anchor="middle" fill="white">
      üî¢ Numeric &amp; String Constraints
    </text>
    
    <text x="40" y="120" font-family="Arial, sans-serif" font-size="20" font-weight="bold" fill="#0c4a6e">
      üìä Powerful Validation Rules:
    </text>
    <text x="40" y="150" font-family="Arial, sans-serif" font-size="16" fill="#0369a1">
      ‚Ä¢ gt/ge/lt/le for number ranges, regex patterns
    </text>
    
    <!-- Code example -->
    <rect x="40" y="175" width="640" height="165" rx="8" fill="#1e293b" stroke="#334155" stroke-width="1"/>
    <text x="55" y="200" font-family="Monaco, monospace" font-size="15" fill="#fb7185" font-weight="bold">
      class Order(BaseModel):
    </text>
    <text x="75" y="225" font-family="Monaco, monospace" font-size="15" fill="#f3f4f6">
      quantity: int = Field(gt=0, le=1000)
    </text>
    <text x="75" y="250" font-family="Monaco, monospace" font-size="15" fill="#f3f4f6">
      total: float = Field(ge=0.01, multiple_of=0.01)
    </text>
    <text x="75" y="275" font-family="Monaco, monospace" font-size="15" fill="#f3f4f6">
      order_id: str = Field(min_length=5,
    </text>
    <text x="120" y="300" font-family="Monaco, monospace" font-size="15" fill="#f3f4f6">
      pattern=r'^ORD-\d+$')
    </text>
    <text x="55" y="325" font-family="Monaco, monospace" font-size="15" fill="#10b981">
      # gt=greater than, ge=greater equal
    </text>
  </g>

  <!-- Annotated Types Section -->
  <g transform="translate(40, 540)">
    <rect x="0" y="0" width="1480" height="200" rx="15" fill="#f0fdf4" stroke="#22c55e" stroke-width="2" filter="url(#shadow)"/>
    <text x="740" y="40" font-family="Arial, sans-serif" font-size="24" font-weight="bold" text-anchor="middle" fill="#166534">
      üè∑Ô∏è Annotated Types &amp; Compound Validation
    </text>
    
    <rect x="40" y="60" width="1400" height="120" rx="8" fill="#1e293b" stroke="#334155" stroke-width="1"/>
    <text x="60" y="85" font-family="Monaco, monospace" font-size="16" fill="#a78bfa" font-weight="bold">
      from typing import Annotated, List
    </text>
    <text x="60" y="110" font-family="Monaco, monospace" font-size="16" fill="#fbbf24">
      Score = Annotated[int, Field(ge=0, le=100)]  # Reusable type alias
    </text>
    <text x="60" y="135" font-family="Monaco, monospace" font-size="16" fill="#f3f4f6">
      scores: List[Score]  # Each item validated 0-100
    </text>
    <text x="60" y="160" font-family="Monaco, monospace" font-size="16" fill="#f3f4f6">
      subjects: Annotated[List[str], Field(min_items=1, max_items=10)]
    </text>
  </g>

  <!-- Validation Examples -->
  <g transform="translate(40, 770)">
    <rect x="0" y="0" width="1480" height="140" rx="15" fill="#fef3c7" stroke="#f59e0b" stroke-width="2" filter="url(#shadow)"/>
    <text x="740" y="40" font-family="Arial, sans-serif" font-size="24" font-weight="bold" text-anchor="middle" fill="#92400e">
      ‚ö° Common Validation Patterns
    </text>
    
    <text x="60" y="75" font-family="Arial, sans-serif" font-size="18" fill="#92400e" font-weight="bold">
      ‚Ä¢ Email: EmailStr automatically validates format and converts to lowercase
    </text>
    <text x="60" y="100" font-family="Arial, sans-serif" font-size="18" fill="#92400e" font-weight="bold">
      ‚Ä¢ Numbers: Use gt/ge/lt/le for ranges, multiple_of for precision
    </text>
    <text x="60" y="125" font-family="Arial, sans-serif" font-size="18" fill="#92400e" font-weight="bold">
      ‚Ä¢ Strings: min_length/max_length + regex pattern for complex validation
    </text>
  </g>

  <!-- Footer -->
  <rect x="0" y="960" width="1600" height="40" fill="url(#headerGrad2)" opacity="0.9"/>
  <text x="800" y="985" font-family="Arial, sans-serif" font-size="16" text-anchor="middle" fill="white" font-weight="bold">
    Part 2 of 3: Field Validation &amp; Constraints ‚Ä¢ Next: Configuration &amp; Best Practices
  </text>
</svg>