<svg viewBox="0 0 1600 1000" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <!-- GitHub-friendly gradients -->
    <linearGradient id="headerGrad3" x1="0%" y1="0%" x2="100%" y2="0%">
      <stop offset="0%" style="stop-color:#059669;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#047857;stop-opacity:1" />
    </linearGradient>
    
    <linearGradient id="strictGrad" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#ea580c;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#dc2626;stop-opacity:1" />
    </linearGradient>
    
    <linearGradient id="configGrad" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#7c3aed;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#6366f1;stop-opacity:1" />
    </linearGradient>
    
    <linearGradient id="practicesGrad" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#0891b2;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#0e7490;stop-opacity:1" />
    </linearGradient>
    
    <!-- Shadow filter -->
    <filter id="shadow" x="-20%" y="-20%" width="140%" height="140%">
      <feDropShadow dx="2" dy="4" stdDeviation="3" flood-color="#00000030"/>
    </filter>
  </defs>

  <!-- White background for GitHub -->
  <rect x="0" y="0" width="1600" height="1100" fill="white"/>

  <!-- Header Section -->
  <rect x="20" y="20" width="1560" height="100" rx="15" fill="url(#headerGrad3)" filter="url(#shadow)"/>
  <text x="800" y="60" font-family="Arial, sans-serif" font-size="42" font-weight="bold" text-anchor="middle" fill="white">
    üêç PYDANTIC GUIDE - PART 3
  </text>
  <text x="800" y="95" font-family="Arial, sans-serif" font-size="22" text-anchor="middle" fill="white" opacity="0.9">
    Configuration, Strict Mode &amp; Best Practices
  </text>

  <!-- Strict vs Lax Mode Section -->
  <g transform="translate(40, 150)">
    <rect x="0" y="0" width="1480" height="220" rx="15" fill="#fef2f2" stroke="#ef4444" stroke-width="2" filter="url(#shadow)"/>
    <rect x="20" y="20" width="1440" height="60" rx="30" fill="url(#strictGrad)"/>
    <text x="740" y="60" font-family="Arial, sans-serif" font-size="28" font-weight="bold" text-anchor="middle" fill="white">
      ‚ö° Strict vs Lax Mode Control
    </text>
    
    <!-- Two column comparison -->
    <g transform="translate(40, 100)">
      <!-- Strict Mode -->
      <rect x="0" y="0" width="680" height="100" rx="8" fill="#fee2e2" stroke="#dc2626" stroke-width="1"/>
      <text x="20" y="30" font-family="Arial, sans-serif" font-size="20" font-weight="bold" fill="#7f1d1d">
        ‚ö° Strict Mode (No Type Conversion)
      </text>
      <text x="20" y="55" font-family="Arial, sans-serif" font-size="16" fill="#991b1b">
        ‚Ä¢ Use for: APIs, financial data, configuration files
      </text>
      <text x="20" y="80" font-family="Arial, sans-serif" font-size="16" fill="#991b1b">
        ‚Ä¢ StrictModel(age="25") ‚Üí ‚ùå ValidationError
      </text>
    </g>
    
    <g transform="translate(760, 100)">
      <!-- Lax Mode -->
      <rect x="0" y="0" width="680" height="100" rx="8" fill="#dcfce7" stroke="#16a34a" stroke-width="1"/>
      <text x="20" y="30" font-family="Arial, sans-serif" font-size="20" font-weight="bold" fill="#166534">
        üîÑ Lax Mode (Smart Conversion)
      </text>
      <text x="20" y="55" font-family="Arial, sans-serif" font-size="16" fill="#15803d">
        ‚Ä¢ Use for: User input, database reads, external APIs
      </text>
      <text x="20" y="80" font-family="Arial, sans-serif" font-size="16" fill="#15803d">
        ‚Ä¢ BaseModel(age="25") ‚Üí ‚úÖ Converts to int(25)
      </text>
    </g>
  </g>

  <!-- Model Configuration Section -->
  <g transform="translate(40, 400)">
    <rect x="0" y="0" width="720" height="280" rx="15" fill="#f8fafc" stroke="#6366f1" stroke-width="2" filter="url(#shadow)"/>
    <rect x="20" y="20" width="680" height="60" rx="30" fill="url(#configGrad)"/>
    <text x="360" y="60" font-family="Arial, sans-serif" font-size="28" font-weight="bold" text-anchor="middle" fill="white">
      ‚öôÔ∏è Model Configuration
    </text>
    
    <rect x="40" y="100" width="640" height="160" rx="8" fill="#1e293b" stroke="#334155" stroke-width="1"/>
    <text x="55" y="125" font-family="Monaco, monospace" font-size="15" fill="#fb7185" font-weight="bold">
      class Settings(BaseModel):
    </text>
    <text x="75" y="150" font-family="Monaco, monospace" font-size="15" fill="#a78bfa">
      model_config = ConfigDict(
    </text>
    <text x="95" y="175" font-family="Monaco, monospace" font-size="15" fill="#f3f4f6">
      strict=True,  # Enable strict mode
    </text>
    <text x="95" y="200" font-family="Monaco, monospace" font-size="15" fill="#f3f4f6">
      frozen=True,  # Immutable after creation
    </text>
    <text x="95" y="225" font-family="Monaco, monospace" font-size="15" fill="#f3f4f6">
      validate_default=True  # Validate defaults
    </text>
    <text x="75" y="250" font-family="Monaco, monospace" font-size="15" fill="#a78bfa">
      )
    </text>
  </g>

  <!-- Advanced Features Section -->
  <g transform="translate(800, 400)">
    <rect x="0" y="0" width="720" height="280" rx="15" fill="#f0f9ff" stroke="#0ea5e9" stroke-width="2" filter="url(#shadow)"/>
    <rect x="20" y="20" width="680" height="60" rx="30" fill="url(#practicesGrad)"/>
    <text x="360" y="60" font-family="Arial, sans-serif" font-size="28" font-weight="bold" text-anchor="middle" fill="white">
      üì§ Serialization &amp; Export
    </text>
    
    <rect x="40" y="100" width="640" height="160" rx="8" fill="#1e293b" stroke="#334155" stroke-width="1"/>
    <text x="55" y="125" font-family="Monaco, monospace" font-size="15" fill="#10b981">
      # Multiple export formats
    </text>
    <text x="55" y="150" font-family="Monaco, monospace" font-size="15" fill="#f3f4f6">
      user.model_dump()  # ‚Üí Dict
    </text>
    <text x="55" y="175" font-family="Monaco, monospace" font-size="15" fill="#f3f4f6">
      user.model_dump_json()  # ‚Üí JSON string
    </text>
    <text x="55" y="200" font-family="Monaco, monospace" font-size="15" fill="#f3f4f6">
      user.model_dump(exclude={'password'})
    </text>
    <text x="55" y="225" font-family="Monaco, monospace" font-size="15" fill="#a78bfa">
      User.model_json_schema()  # OpenAPI
    </text>
  </g>

  <!-- Best Practices Section -->
  <g transform="translate(40, 710)">
    <rect x="0" y="0" width="1480" height="200" rx="15" fill="#f0fdf4" stroke="#22c55e" stroke-width="2" filter="url(#shadow)"/>
    <text x="740" y="40" font-family="Arial, sans-serif" font-size="28" font-weight="bold" text-anchor="middle" fill="#166534">
      üí° Best Practices &amp; Performance Tips
    </text>
    
    <!-- Two columns for best practices -->
    <g transform="translate(40, 60)">
      <!-- Performance Tips -->
      <rect x="0" y="0" width="680" height="120" rx="8" fill="#dcfce7" stroke="#16a34a" stroke-width="1"/>
      <text x="20" y="25" font-family="Arial, sans-serif" font-size="18" font-weight="bold" fill="#166534">
        üöÄ Performance Optimization
      </text>
      <text x="20" y="50" font-family="Arial, sans-serif" font-size="15" fill="#15803d">
        ‚Ä¢ Use __slots__ = True in ConfigDict for memory efficiency
      </text>
      <text x="20" y="75" font-family="Arial, sans-serif" font-size="15" fill="#15803d">
        ‚Ä¢ Prefer Literal over Enum for simple string choices
      </text>
      <text x="20" y="100" font-family="Arial, sans-serif" font-size="15" fill="#15803d">
        ‚Ä¢ Cache validators with @lru_cache for repeated use
      </text>
    </g>
    
    <g transform="translate(760, 60)">
      <!-- Development Tips -->
      <rect x="0" y="0" width="680" height="120" rx="8" fill="#fef3c7" stroke="#f59e0b" stroke-width="1"/>
      <text x="20" y="25" font-family="Arial, sans-serif" font-size="18" font-weight="bold" fill="#92400e">
        üîß Development Best Practices
      </text>
      <text x="20" y="50" font-family="Arial, sans-serif" font-size="15" fill="#a16207">
        ‚Ä¢ Always handle ValidationError exceptions in production
      </text>
      <text x="20" y="75" font-family="Arial, sans-serif" font-size="15" fill="#a16207">
        ‚Ä¢ Use descriptive Field() descriptions for documentation
      </text>
      <text x="20" y="100" font-family="Arial, sans-serif" font-size="15" fill="#a16207">
        ‚Ä¢ Test edge cases: empty strings, null values, boundaries
      </text>
    </g>
  </g>

  <!-- Complete Example Section -->
  <g transform="translate(40, 940)">
    <rect x="0" y="0" width="1480" height="40" rx="15" fill="#1e293b" stroke="#334155" stroke-width="1" filter="url(#shadow)"/>
    <text x="60" y="25" font-family="Monaco, monospace" font-size="14" fill="#10b981" font-weight="bold">
      Complete Example: OrderRequest(user_id=123, items=["laptop"], email="user@test.com", total=Decimal("999.99"))
    </text>
  </g>

  <!-- Footer -->
  <rect x="0" y="1000" width="1600" height="40" fill="url(#headerGrad3)" opacity="0.9"/>
  <text x="800" y="1000" font-family="Arial, sans-serif" font-size="16" text-anchor="middle" fill="white" font-weight="bold">
    Part 3 of 3: Configuration &amp; Best Practices ‚Ä¢ Pydantic: Fast, Type-safe, Developer-friendly
  </text>
</svg>