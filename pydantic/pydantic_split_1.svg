<svg viewBox="0 0 1600 1000" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <!-- GitHub-friendly gradients -->
    <linearGradient id="headerGrad" x1="0%" y1="0%" x2="100%" y2="0%">
      <stop offset="0%" style="stop-color:#2563eb;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#1e40af;stop-opacity:1" />
    </linearGradient>
    
    <linearGradient id="baseModelGrad" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#059669;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#047857;stop-opacity:1" />
    </linearGradient>
    
    <linearGradient id="validationGrad" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#dc2626;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#b91c1c;stop-opacity:1" />
    </linearGradient>
    
    <!-- Shadow filter -->
    <filter id="shadow" x="-20%" y="-20%" width="140%" height="140%">
      <feDropShadow dx="2" dy="4" stdDeviation="3" flood-color="#00000030"/>
    </filter>
  </defs>

  <!-- White background for GitHub -->
  <rect x="0" y="0" width="1600" height="1000" fill="white"/>

  <!-- Header Section -->
  <rect x="20" y="20" width="1560" height="100" rx="15" fill="url(#headerGrad)" filter="url(#shadow)"/>
  <text x="800" y="60" font-family="Arial, sans-serif" font-size="42" font-weight="bold" text-anchor="middle" fill="white">
    üêç PYDANTIC GUIDE - PART 1
  </text>
  <text x="800" y="95" font-family="Arial, sans-serif" font-size="22" text-anchor="middle" fill="white" opacity="0.9">
    BaseModel &amp; Built-in Validation Types
  </text>

  <!-- BaseModel Section -->
  <g transform="translate(40, 150)">
    <rect x="0" y="0" width="720" height="380" rx="15" fill="#f8fafc" stroke="#e2e8f0" stroke-width="2" filter="url(#shadow)"/>
    <rect x="20" y="20" width="680" height="60" rx="30" fill="url(#baseModelGrad)"/>
    <text x="360" y="60" font-family="Arial, sans-serif" font-size="28" font-weight="bold" text-anchor="middle" fill="white">
      üìã BaseModel &amp; Type Validation
    </text>
    
    <!-- Feature descriptions -->
    <text x="40" y="120" font-family="Arial, sans-serif" font-size="20" font-weight="bold" fill="#1f2937">
      ‚ú® Smart Type Conversion Features:
    </text>
    <text x="40" y="150" font-family="Arial, sans-serif" font-size="16" fill="#374151">
      ‚Ä¢ Automatically converts compatible types (int("30") ‚úÖ, int("thirty") ‚ùå)
    </text>
    <text x="40" y="175" font-family="Arial, sans-serif" font-size="16" fill="#374151">
      ‚Ä¢ Validates data structure on instantiation
    </text>
    
    <!-- Code example -->
    <rect x="40" y="195" width="640" height="165" rx="8" fill="#1e293b" stroke="#334155" stroke-width="1"/>
    <text x="55" y="220" font-family="Monaco, monospace" font-size="15" fill="#fbbf24" font-weight="bold">
      from pydantic import BaseModel
    </text>
    <text x="55" y="245" font-family="Monaco, monospace" font-size="15" fill="#a78bfa">
      from typing import Optional
    </text>
    <text x="55" y="275" font-family="Monaco, monospace" font-size="15" fill="#fb7185" font-weight="bold">
      class User(BaseModel):
    </text>
    <text x="75" y="300" font-family="Monaco, monospace" font-size="15" fill="#f3f4f6">
      name: str
    </text>
    <text x="75" y="325" font-family="Monaco, monospace" font-size="15" fill="#f3f4f6">
      age: int = 30  # Default value
    </text>
    <text x="75" y="350" font-family="Monaco, monospace" font-size="15" fill="#f3f4f6">
      email: Optional[str] = None
    </text>
  </g>

  <!-- Built-in Validation Section -->
  <g transform="translate(800, 150)">
    <rect x="0" y="0" width="720" height="380" rx="15" fill="#f8fafc" stroke="#e2e8f0" stroke-width="2" filter="url(#shadow)"/>
    <rect x="20" y="20" width="680" height="60" rx="30" fill="url(#validationGrad)"/>
    <text x="360" y="60" font-family="Arial, sans-serif" font-size="28" font-weight="bold" text-anchor="middle" fill="white">
      ‚úÖ Built-in Validation Types
    </text>
    
    <text x="40" y="120" font-family="Arial, sans-serif" font-size="20" font-weight="bold" fill="#1f2937">
      üîê Email, URL, and Special Types:
    </text>
    <text x="40" y="150" font-family="Arial, sans-serif" font-size="16" fill="#374151">
      ‚Ä¢ EmailStr, HttpUrl, UUID4, datetime validation
    </text>
    
    <!-- Code example -->
    <rect x="40" y="175" width="640" height="185" rx="8" fill="#1e293b" stroke="#334155" stroke-width="1"/>
    <text x="55" y="200" font-family="Monaco, monospace" font-size="15" fill="#fbbf24" font-weight="bold">
      from pydantic import BaseModel, EmailStr, HttpUrl
    </text>
    <text x="55" y="225" font-family="Monaco, monospace" font-size="15" fill="#a78bfa">
      from datetime import datetime
    </text>
    <text x="55" y="255" font-family="Monaco, monospace" font-size="15" fill="#fb7185" font-weight="bold">
      class Profile(BaseModel):
    </text>
    <text x="75" y="280" font-family="Monaco, monospace" font-size="15" fill="#f3f4f6">
      email: EmailStr  # Auto validates email
    </text>
    <text x="75" y="305" font-family="Monaco, monospace" font-size="15" fill="#f3f4f6">
      website: HttpUrl  # Validates URLs
    </text>
    <text x="75" y="330" font-family="Monaco, monospace" font-size="15" fill="#f3f4f6">
      created_at: datetime  # Parses ISO
    </text>
  </g>

  <!-- Example Usage Section -->
  <g transform="translate(40, 560)">
    <rect x="0" y="0" width="1480" height="200" rx="15" fill="#f0f9ff" stroke="#0ea5e9" stroke-width="2" filter="url(#shadow)"/>
    <text x="740" y="40" font-family="Arial, sans-serif" font-size="24" font-weight="bold" text-anchor="middle" fill="#0c4a6e">
      üí° Real-World Usage Examples
    </text>
    
    <rect x="40" y="60" width="1400" height="120" rx="8" fill="#1e293b" stroke="#334155" stroke-width="1"/>
    <text x="60" y="85" font-family="Monaco, monospace" font-size="16" fill="#10b981" font-weight="bold">
      # ‚úÖ Valid Examples
    </text>
    <text x="60" y="110" font-family="Monaco, monospace" font-size="16" fill="#f3f4f6">
      user = User(name="Alice", age="30")  # age automatically converted to int
    </text>
    <text x="60" y="135" font-family="Monaco, monospace" font-size="16" fill="#f3f4f6">
      profile = Profile(email="user@example.com", website="https://example.com")
    </text>
    <text x="60" y="160" font-family="Monaco, monospace" font-size="16" fill="#ef4444" font-weight="bold">
      # ‚ùå Invalid: User(name="Bob", age="twenty") ‚Üí ValidationError
    </text>
  </g>

  <!-- Tips Section -->
  <g transform="translate(40, 790)">
    <rect x="0" y="0" width="1480" height="140" rx="15" fill="#f0fdf4" stroke="#22c55e" stroke-width="2" filter="url(#shadow)"/>
    <text x="740" y="40" font-family="Arial, sans-serif" font-size="24" font-weight="bold" text-anchor="middle" fill="#166534">
      üéØ Key Benefits &amp; Tips
    </text>
    
    <text x="60" y="75" font-family="Arial, sans-serif" font-size="18" fill="#166534" font-weight="bold">
      ‚Ä¢ Type Safety: Catch errors at runtime with clear validation messages
    </text>
    <text x="60" y="100" font-family="Arial, sans-serif" font-size="18" fill="#166534" font-weight="bold">
      ‚Ä¢ Smart Conversion: Handles string-to-int, datetime parsing, and more automatically
    </text>
    <text x="60" y="125" font-family="Arial, sans-serif" font-size="18" fill="#166534" font-weight="bold">
      ‚Ä¢ Rich Types: Built-in support for emails, URLs, UUIDs, and custom validation
    </text>
  </g>

  <!-- Footer -->
  <rect x="0" y="960" width="1600" height="40" fill="url(#headerGrad)" opacity="0.9"/>
  <text x="800" y="985" font-family="Arial, sans-serif" font-size="16" text-anchor="middle" fill="white" font-weight="bold">
    Part 1 of 3: Foundation Features ‚Ä¢ Next: Field Validation &amp; Constraints
  </text>
</svg>