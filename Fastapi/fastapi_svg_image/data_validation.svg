<svg viewBox="0 0 1200 900" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <linearGradient id="headerGrad" x1="0%" y1="0%" x2="100%" y2="0%">
      <stop offset="0%" style="stop-color:#1e40af;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#3b82f6;stop-opacity:1" />
    </linearGradient>
    <linearGradient id="coreGrad" x1="0%" y1="0%" x2="100%" y2="0%">
      <stop offset="0%" style="stop-color:#059669;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#10b981;stop-opacity:1" />
    </linearGradient>
    <linearGradient id="fieldGrad" x1="0%" y1="0%" x2="100%" y2="0%">
      <stop offset="0%" style="stop-color:#dc2626;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#ef4444;stop-opacity:1" />
    </linearGradient>
    <linearGradient id="annotatedGrad" x1="0%" y1="0%" x2="100%" y2="0%">
      <stop offset="0%" style="stop-color:#7c3aed;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#a855f7;stop-opacity:1" />
    </linearGradient>
    <linearGradient id="paramGrad" x1="0%" y1="0%" x2="100%" y2="0%">
      <stop offset="0%" style="stop-color:#ea580c;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#f97316;stop-opacity:1" />
    </linearGradient>
    <linearGradient id="validatorGrad" x1="0%" y1="0%" x2="100%" y2="0%">
      <stop offset="0%" style="stop-color:#0891b2;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#06b6d4;stop-opacity:1" />
    </linearGradient>
    <filter id="shadow" x="-20%" y="-20%" width="140%" height="140%">
      <feDropShadow dx="2" dy="2" stdDeviation="3" flood-color="rgba(0,0,0,0.3)"/>
    </filter>
  </defs>
  
  <!-- Background -->
  <rect width="1200" height="900" fill="#f8fafc"/>
  
  <!-- Header -->
  <rect width="1200" height="80" fill="url(#headerGrad)"/>
  <text x="600" y="35" text-anchor="middle" fill="white" font-size="32" font-weight="bold" font-family="Arial">FastAPI Data Validation Essentials</text>
  <text x="600" y="65" text-anchor="middle" fill="#e2e8f0" font-size="16" font-family="Arial">Master All Validation Tools for Secure APIs</text>
  
  <!-- Row 1: Core Foundations -->
  <g transform="translate(80, 120)">
    <rect width="320" height="140" rx="12" fill="url(#coreGrad)" filter="url(#shadow)"/>
    <text x="160" y="30" text-anchor="middle" fill="white" font-size="20" font-weight="bold">Pydantic BaseModel</text>
    <text x="160" y="55" text-anchor="middle" fill="#d1fae5" font-size="14">Core validation foundation</text>
    <rect x="20" y="70" width="280" height="55" rx="8" fill="rgba(255,255,255,0.1)"/>
    <text x="25" y="88" fill="white" font-size="13" font-family="monospace">class User(BaseModel):</text>
    <text x="25" y="105" fill="white" font-size="13" font-family="monospace">    name: str</text>
    <text x="25" y="122" fill="white" font-size="13" font-family="monospace">    age: int</text>
  </g>
  
  <g transform="translate(440, 120)">
    <rect width="320" height="140" rx="12" fill="url(#fieldGrad)" filter="url(#shadow)"/>
    <text x="160" y="30" text-anchor="middle" fill="white" font-size="20" font-weight="bold">Field()</text>
    <text x="160" y="55" text-anchor="middle" fill="#fecaca" font-size="14">Metadata &amp; constraints</text>
    <rect x="20" y="70" width="280" height="55" rx="8" fill="rgba(255,255,255,0.1)"/>
    <text x="25" y="88" fill="white" font-size="13" font-family="monospace">age: int = Field(ge=18, le=100)</text>
    <text x="25" y="105" fill="white" font-size="13" font-family="monospace">name: str = Field(min_length=2)</text>
    <text x="25" y="122" fill="white" font-size="13" font-family="monospace">email: str = Field(regex=r'.*@.*')</text>
  </g>
  
  <g transform="translate(800, 120)">
    <rect width="320" height="140" rx="12" fill="url(#annotatedGrad)" filter="url(#shadow)"/>
    <text x="160" y="30" text-anchor="middle" fill="white" font-size="20" font-weight="bold">Annotated</text>
    <text x="160" y="55" text-anchor="middle" fill="#e9d5ff" font-size="14">Modern type hints</text>
    <rect x="20" y="70" width="280" height="55" rx="8" fill="rgba(255,255,255,0.1)"/>
    <text x="25" y="88" fill="white" font-size="12" font-family="monospace">Annotated[str, Field(min_length=3)]</text>
    <text x="25" y="105" fill="white" font-size="12" font-family="monospace">Annotated[int, Field(gt=0)]</text>
    <text x="25" y="122" fill="white" font-size="12" font-family="monospace">UserId = Annotated[int, Field(gt=0)]</text>
  </g>
  
  <!-- Row 2: Parameter Validation -->
  <g transform="translate(80, 300)">
    <rect width="320" height="140" rx="12" fill="url(#paramGrad)" filter="url(#shadow)"/>
    <text x="160" y="30" text-anchor="middle" fill="white" font-size="20" font-weight="bold">Path/Query/Body</text>
    <text x="160" y="55" text-anchor="middle" fill="#fed7aa" font-size="14">Endpoint parameter validation</text>
    <rect x="20" y="70" width="280" height="55" rx="8" fill="rgba(255,255,255,0.1)"/>
    <text x="25" y="88" fill="white" font-size="12" font-family="monospace">user_id: int = Path(gt=0)</text>
    <text x="25" y="105" fill="white" font-size="12" font-family="monospace">limit: int = Query(default=10)</text>
    <text x="25" y="122" fill="white" font-size="12" font-family="monospace">user: User = Body(...)</text>
  </g>
  
  <g transform="translate(440, 300)">
    <rect width="320" height="140" rx="12" fill="url(#validatorGrad)" filter="url(#shadow)"/>
    <text x="160" y="30" text-anchor="middle" fill="white" font-size="20" font-weight="bold">@field_validator</text>
    <text x="160" y="55" text-anchor="middle" fill="#a7f3d0" font-size="14">Custom field logic</text>
    <rect x="20" y="70" width="280" height="55" rx="8" fill="rgba(255,255,255,0.1)"/>
    <text x="25" y="88" fill="white" font-size="12" font-family="monospace">@field_validator('password')</text>
    <text x="25" y="105" fill="white" font-size="12" font-family="monospace">def check_password(cls, v):</text>
    <text x="25" y="122" fill="white" font-size="12" font-family="monospace">    return validate_strong(v)</text>
  </g>
  
  <g transform="translate(800, 300)">
    <rect width="320" height="140" rx="12" fill="#be185d" filter="url(#shadow)"/>
    <text x="160" y="30" text-anchor="middle" fill="white" font-size="20" font-weight="bold">@model_validator</text>
    <text x="160" y="55" text-anchor="middle" fill="#fce7f3" font-size="14">Cross-field logic</text>
    <rect x="20" y="70" width="280" height="55" rx="8" fill="rgba(255,255,255,0.1)"/>
    <text x="25" y="88" fill="white" font-size="12" font-family="monospace">@model_validator(mode='after')</text>
    <text x="25" y="105" fill="white" font-size="12" font-family="monospace">def check_passwords_match(self):</text>
    <text x="25" y="122" fill="white" font-size="12" font-family="monospace">    # validate multiple fields</text>
  </g>
  
  <!-- Row 3: Built-in Types -->
  <g transform="translate(80, 480)">
    <rect width="320" height="140" rx="12" fill="#166534" filter="url(#shadow)"/>
    <text x="160" y="30" text-anchor="middle" fill="white" font-size="20" font-weight="bold">EmailStr, HttpUrl</text>
    <text x="160" y="55" text-anchor="middle" fill="#bbf7d0" font-size="14">Specialized validation types</text>
    <rect x="20" y="70" width="280" height="55" rx="8" fill="rgba(255,255,255,0.1)"/>
    <text x="25" y="88" fill="white" font-size="13" font-family="monospace">email: EmailStr</text>
    <text x="25" y="105" fill="white" font-size="13" font-family="monospace">website: HttpUrl</text>
    <text x="25" y="122" fill="white" font-size="13" font-family="monospace">user_id: UUID4</text>
  </g>
  
  <g transform="translate(440, 480)">
    <rect width="320" height="140" rx="12" fill="#7c2d12" filter="url(#shadow)"/>
    <text x="160" y="30" text-anchor="middle" fill="white" font-size="20" font-weight="bold">Dependencies</text>
    <text x="160" y="55" text-anchor="middle" fill="#fed7aa" font-size="14">Reusable auth/validation</text>
    <rect x="20" y="70" width="280" height="55" rx="8" fill="rgba(255,255,255,0.1)"/>
    <text x="25" y="88" fill="white" font-size="12" font-family="monospace">api_key: str = Depends(validate_key)</text>
    <text x="25" y="105" fill="white" font-size="12" font-family="monospace">user: User = Depends(get_user)</text>
    <text x="25" y="122" fill="white" font-size="12" font-family="monospace">db: Session = Depends(get_db)</text>
  </g>
  
  <g transform="translate(800, 480)">
    <rect width="320" height="140" rx="12" fill="#581c87" filter="url(#shadow)"/>
    <text x="160" y="30" text-anchor="middle" fill="white" font-size="20" font-weight="bold">response_model</text>
    <text x="160" y="55" text-anchor="middle" fill="#e9d5ff" font-size="14">Output validation</text>
    <rect x="20" y="70" width="280" height="55" rx="8" fill="rgba(255,255,255,0.1)"/>
    <text x="25" y="88" fill="white" font-size="12" font-family="monospace">@app.post("/users/",</text>
    <text x="25" y="105" fill="white" font-size="12" font-family="monospace">  response_model=UserOut)</text>
    <text x="25" y="122" fill="white" font-size="12" font-family="monospace">def create_user(...):</text>
  </g>
  
  <!-- Row 4: Advanced Features -->
  <g transform="translate(180, 660)">
    <rect width="240" height="140" rx="12" fill="#0f172a" filter="url(#shadow)"/>
    <text x="120" y="30" text-anchor="middle" fill="white" font-size="18" font-weight="bold">Nested Models</text>
    <text x="120" y="55" text-anchor="middle" fill="#cbd5e1" font-size="14">Complex structures</text>
    <rect x="20" y="70" width="200" height="55" rx="8" fill="rgba(255,255,255,0.1)"/>
    <text x="25" y="88" fill="white" font-size="13" font-family="monospace">address: Address</text>
    <text x="25" y="105" fill="white" font-size="13" font-family="monospace">items: List[Item]</text>
    <text x="25" y="122" fill="white" font-size="13" font-family="monospace">metadata: Dict[str, Any]</text>
  </g>
  
  <g transform="translate(480, 660)">
    <rect width="240" height="140" rx="12" fill="#1e293b" filter="url(#shadow)"/>
    <text x="120" y="30" text-anchor="middle" fill="white" font-size="18" font-weight="bold">Generic Models</text>
    <text x="120" y="55" text-anchor="middle" fill="#cbd5e1" font-size="14">Reusable wrappers</text>
    <rect x="20" y="70" width="200" height="55" rx="8" fill="rgba(255,255,255,0.1)"/>
    <text x="25" y="88" fill="white" font-size="12" font-family="monospace">ResponseModel[UserOut]</text>
    <text x="25" y="105" fill="white" font-size="12" font-family="monospace">PagedResult[T]</text>
    <text x="25" y="122" fill="white" font-size="12" font-family="monospace">APIResponse[T]</text>
  </g>
  
  <g transform="translate(780, 660)">
    <rect width="240" height="140" rx="12" fill="#b91c1c" filter="url(#shadow)"/>
    <text x="120" y="30" text-anchor="middle" fill="white" font-size="18" font-weight="bold">ValidationError</text>
    <text x="120" y="55" text-anchor="middle" fill="#fecaca" font-size="14">Custom error handling</text>
    <rect x="20" y="70" width="200" height="55" rx="8" fill="rgba(255,255,255,0.1)"/>
    <text x="25" y="88" fill="white" font-size="11" font-family="monospace">@app.exception_handler(</text>
    <text x="25" y="105" fill="white" font-size="11" font-family="monospace">  ValidationError)</text>
    <text x="25" y="122" fill="white" font-size="11" font-family="monospace">def handle_errors(...):</text>
  </g>
  
  <!-- Connection arrows -->
  <defs>
    <marker id="arrow" markerWidth="10" markerHeight="10" refX="9" refY="3" orient="auto" markerUnits="strokeWidth">
      <path d="M0,0 L0,6 L9,3 z" fill="#64748b"/>
    </marker>
  </defs>
  
  <!-- Horizontal arrows Row 1 -->
  <line x1="400" y1="190" x2="440" y2="190" stroke="#64748b" stroke-width="2" marker-end="url(#arrow)"/>
  <line x1="760" y1="190" x2="800" y2="190" stroke="#64748b" stroke-width="2" marker-end="url(#arrow)"/>
  
  <!-- Vertical arrows to Row 2 -->
  <line x1="240" y1="260" x2="240" y2="300" stroke="#64748b" stroke-width="2" marker-end="url(#arrow)"/>
  <line x1="600" y1="260" x2="600" y2="300" stroke="#64748b" stroke-width="2" marker-end="url(#arrow)"/>
  <line x1="960" y1="260" x2="960" y2="300" stroke="#64748b" stroke-width="2" marker-end="url(#arrow)"/>
  
  <!-- Horizontal arrows Row 2 -->
  <line x1="400" y1="370" x2="440" y2="370" stroke="#64748b" stroke-width="2" marker-end="url(#arrow)"/>
  <line x1="760" y1="370" x2="800" y2="370" stroke="#64748b" stroke-width="2" marker-end="url(#arrow)"/>
  
  <!-- Vertical arrows to Row 3 -->
  <line x1="240" y1="440" x2="240" y2="480" stroke="#64748b" stroke-width="2" marker-end="url(#arrow)"/>
  <line x1="600" y1="440" x2="600" y2="480" stroke="#64748b" stroke-width="2" marker-end="url(#arrow)"/>
  <line x1="960" y1="440" x2="960" y2="480" stroke="#64748b" stroke-width="2" marker-end="url(#arrow)"/>
  
  <!-- Arrows to Row 4 -->
  <line x1="300" y1="620" x2="300" y2="660" stroke="#64748b" stroke-width="2" marker-end="url(#arrow)"/>
  <line x1="600" y1="620" x2="600" y2="660" stroke="#64748b" stroke-width="2" marker-end="url(#arrow)"/>
  <line x1="900" y1="620" x2="900" y2="660" stroke="#64748b" stroke-width="2" marker-end="url(#arrow)"/>
  
  <!-- Bottom banner -->
  <rect y="830" width="1200" height="70" fill="#1e293b"/>
  <text x="600" y="855" text-anchor="middle" fill="white" font-size="18" font-weight="bold">✅ Complete Data Validation Toolkit</text>
  <text x="600" y="880" text-anchor="middle" fill="#94a3b8" font-size="14">Build secure, validated APIs with all essential tools</text>
</svg>